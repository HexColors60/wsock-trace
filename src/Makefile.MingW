#
# Wsock-trace makefile for MinGW, MinGW64-w64 or TDM-gcc.
# This requires GNU make v4 or later.
#
# G. Vanem <gvanem@yahoo.no> 2011.
#

USE_DEBUG    = 0
USE_BFD      = 0
USE_DEF_FILE = 0
USE_MSVCRT10 = 0

#
# If you want Lua-script support, change these:
#
USE_LUA      = 0
LUAJIT_ROOT ?= f:/MinGW32/src/Parsers/LuaJIT

BIN_TARGET  = $(realpath $(MINGW32))/bin
LIB_TARGET  = $(realpath $(MINGW32))/lib


#
# If '$(CPU)=x64', build 64-bit version. Assuming your MinGW
# is dual-target capable and supports the '-mxx' option.
# Otherwise 32-bit programs.
#
ifeq ($(CPU),)
  CPU = x86
endif

ifeq ($(CPU),X86)
  CPU = x86
endif

ifeq ($(CPU),X64)
  CPU = x64
endif

CC      = gcc
CFLAGS  = -Wall -DWIN32_LEAN_AND_MEAN -D_WIN32_WINNT=0x0600 -Wno-missing-braces
RCFLAGS = -O COFF -DDEBUG=$(USE_DEBUG) -D__MINGW32__

ifeq ($(CPU),x64)
  CFLAGS  += -m64 -DNO_STACK_WALK  # stkwalk.c is only for x86 ATM.
  LDFLAGS  = -m64
  RCFLAGS  += -DBITNESS=64 --target=pe-x86-64
  X_SUFFIX = _x64
else
  CFLAGS  += -m32
  LDFLAGS  = -m32
  RCFLAGS  += -DBITNESS=32 --target=pe-i386
  X_SUFFIX =
endif

ifeq ($(USE_MSVCRT10),1)
  CFLAGS += -D__MSVCRT_VERSION__=0x0A00 -DMINGW_USE_MSVCR_100
endif

ifeq ($(USE_LUA),1)
  CFLAGS  += -DUSE_LUA -I$(LUAJIT_ROOT)/src
  EX_LIBS += $(LUAJIT_ROOT)/src/libluajit.a
endif

LDFLAGS += -Wl,--print-map,--sort-common -t

ifeq ($(USE_DEBUG),1)
  CFLAGS += -O2 -g -D_DEBUG
else
  CFLAGS  += -O3 -fomit-frame-pointer
  LDFLAGS += # -s
endif

ifeq ($(USE_BFD),1)
  CFLAGS  += -DUSE_BFD
  EX_LIBS += -lbfd -liberty -lintl -lz

  ifeq ($(CPU),x86)
    CFLAGS += -DBFD_ARCH_SIZE=32
  else ifeq ($(CPU),x64)
    CFLAGS += -DBFD_ARCH_SIZE=64
  else
    $(error "Unknown CPU")
  endif
endif

ifeq ($(USE_DEF_FILE),1)
  CFLAGS += -DUSE_DEF_FILE
endif

EX_LIBS += -lole32

ifeq ($(USE_MSVCRT10),1)
  EX_LIBS += -lmsvcr100
endif

OBJ_DIR = MinGW_obj

SOURCES = wsock_trace.c wsock_trace_lua.c init.c common.c cpu.c dump.c \
          geoip.c in_addr.c stkwalk.c bfd_gcc.c

OBJECTS  = $(addprefix $(OBJ_DIR)/, $(SOURCES:.c=.o) wsock_trace.res)
DATA_OBJ = $(OBJ_DIR)/data.o

all: message $(OBJ_DIR) libwsock_trace.a test.exe install
	@echo 'Welcome to Wsock_trace library and example.'

message:
	@echo 'Building MinGW version. CPU=$(CPU).'

$(OBJ_DIR):
	- mkdir $(OBJ_DIR)

libwsock_trace.a: wsock_trace_mw$(X_SUFFIX).dll

wsock_trace_mw$(X_SUFFIX).dll: LDFLAGS += -shared \
                                          -Wl,--output-def,wsock_trace_mw$(X_SUFFIX).def \
                                          -Wl,--out-implib,libwsock_trace.a

WSOCK_DEPS = $(OBJECTS) $(DATA_OBJ)

ifeq ($(USE_DEF_FILE),1)
  DEF_FILE    = wsock_trace$(X_SUFFIX).def
  WSOCK_DEPS += $(DEF_FILE)
endif

wsock_trace_mw$(X_SUFFIX).dll: $(WSOCK_DEPS) compile_juajit_$(USE_LUA)
	$(CC) $(LDFLAGS) -o $@ $(OBJECTS) $(DEF_FILE) $(EX_LIBS) > wsock_trace_mw$(X_SUFFIX).map
	ar rs libwsock_trace.a $(DATA_OBJ)

install: libwsock_trace.a wsock_trace_mw$(X_SUFFIX).dll
	cp --update libwsock_trace.a              $(LIB_TARGET)
	cp --update wsock_trace_mw$(X_SUFFIX).dll $(BIN_TARGET)

test.exe: $(OBJ_DIR)/test.o libwsock_trace.a
	$(CC) $(LDFLAGS) -o $@ $^ > test.map

dump.exe: dump.c common.c in_addr.c processes.c
	$(CC) $(CFLAGS) $(LDFLAGS) -DTEST_DUMP_DATA $^ -o $@ -lws2_32 -lole32 > dump.map

geoip.exe: geoip.c common.c init.c in_addr.c
	$(CC) $(CFLAGS) $(LDFLAGS) -DTEST_GEOIP -DUSE_FWRITE $^ -o $@ -lws2_32 -lole32 > geoip.map

geoip2.exe: geoip.c common.c init.c in_addr.c geoip-gen4.c geoip-gen6.c
	$(CC) $(CFLAGS) $(LDFLAGS) -DTEST_GEOIP -DUSE_FWRITE -DUSE_GEOIP_GENERATED \
	      geoip.c common.c init.c in_addr.c -o $@ -lws2_32 -lole32 > geoip2.map

geoip-gen4.c: geoip.exe
	geoip.exe -g4 > $@

geoip-gen6.c: geoip.exe
	geoip.exe -g6 > $@

run_test: test.exe
	test.exe -dd

compile_juajit_0:
	@echo

#
# Make sure the '$(LUAJIT_ROOT)/src/Makefile' specifies the same
# '-m[32|64]' as above. I.e. 'CC = gcc -m32'
#
# and that 'BUILDMODE = static'.
#
compile_juajit_1:
	$(MAKE) -C $(LUAJIT_ROOT)/src all

clean:
	- rm -f $(OBJ_DIR)/*.o $(OBJ_DIR)/*.res

vclean realclean: clean
	rm -f libwsock_trace.a wsock_trace_mw$(X_SUFFIX).dll wsock_trace_mw$(X_SUFFIX).map \
	      dump.exe dump.map geoip.exe geoip.map geoip2.exe geoip2.map \
	      geoip-gen4.c geoip-gen6.c test.exe test.map .depend.MinGW
	- rmdir $(OBJ_DIR)

$(OBJ_DIR)/%.o: %.c
	$(CC) $(CFLAGS) -o $@ -c $<
	@echo

$(OBJ_DIR)/wsock_trace.res: wsock_trace.rc
	windres $(RCFLAGS) -o $(OBJ_DIR)/wsock_trace.res wsock_trace.rc

REPLACE = sed -e 's/\(.*\)\.o: /\n$$(OBJ_DIR)\/\1.o: /'

depend:
	$(CC) -MM $(CFLAGS) $(SOURCES) data.c test.c | $(REPLACE) > .depend.MinGW

-include .depend.MinGW
