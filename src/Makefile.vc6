#
# Wsock-trace makefile for MSVC6+
# G. Vanem <gvanem@yahoo.no> 2011.
#

USE_DEBUG    = 0
USE_DEF_FILE = 1

LIB_TARGET = $(VC_BASE)\lib
BIN_TARGET = $(VC_BASE)\bin

#
# Set '%WANT_64_BITS%=1' to build a 64-bit version. Adds a '_x64' suffix to
# the DLL and lib.
#
!if "$(WANT_64_BITS)" == "1"
X_SUFFIX = _x64
MACHINE = x64
!else
MACHINE = x86
!endif

#
# Configurations:
#  -MD   - msvcrt1*.dll,  threads, release (normal)
#  -MDd  - msvcrt1*d.dll, threads, debug
#  -ML   - libc, no threads,  release (not available on VC-2008+)
#  -MLd  - libc, no threads,  debug   (not available on VC-2008+)
#  -MT   - libc, threads,     release
#  -MTd  - libc, threads,     debug

CC      = cl
CFLAGS  = -nologo -I. -W3 -Zi -DWIN32 -DWIN32_LEAN_AND_MEAN -D_WIN32_WINNT=0x0600 # -GS -RTC1 -RTCu -D_DEBUG
LDFLAGS = -nologo -map -debug -verbose -incremental:no -subsystem:console         # -debugtype:cv -fixed:no
LDFLAGS = $(LDFLAGS) -machine:$(MACHINE)

OBJ_DIR = MSVC_obj$(X_SUFFIX)

!if "$(USE_DEBUG)" == "1"
CFLAGS  = $(CFLAGS) -MTd -Zi -Os -D_DEBUG
!else
CFLAGS  = $(CFLAGS) -MT -Ot -Gs -DNDEBUG
!endif

#
# stkwalk.c is not 64-bit ready.
#

!if "$(MACHINE)" == "x64"
CFLAGS = $(CFLAGS) -DNO_STACK_WALK
!endif

!if "$(USE_DEF_FILE)" == "1"
CFLAGS = $(CFLAGS) -DUSE_DEF_FILE
!endif

EX_LIBS = $(EX_LIBS) ole32.lib

#
# The 'wsock_trace{_x64}.lib' is an import-lib for 'wsock_trace{_x64}.dll'.
# Since the SDK header <ws2ipdef.h> declares some data with no export
# declaration ('in6addr_any' etc.), the data.obj is simply added to this
# imp-lib.
#
WSOCK_LIB = wsock_trace$(X_SUFFIX).lib
WSOCK_DLL = wsock_trace$(X_SUFFIX).dll
WSOCK_MAP = wsock_trace$(X_SUFFIX).map
WSOCK_DEF = wsock_trace$(X_SUFFIX).def

CFLAGS = $(CFLAGS) -D_CRT_SECURE_NO_WARNINGS -DWSOCK_TRACE_DLL=\"$(WSOCK_DLL)\"

OBJECTS = $(OBJ_DIR)\common.obj      \
          $(OBJ_DIR)\dump.obj        \
          $(OBJ_DIR)\init.obj        \
          $(OBJ_DIR)\in_addr.obj     \
          $(OBJ_DIR)\stkwalk.obj     \
          $(OBJ_DIR)\wsock_trace.obj \
          $(OBJ_DIR)\wsock_trace.res


DATA_OBJ = $(OBJ_DIR)\data.obj

all: $(OBJ_DIR) $(WSOCK_DLL) $(WSOCK_LIB) test.exe run_test install
	@echo Welcome to Wsock_trace library and example.

$(OBJ_DIR):
	mkdir $(OBJ_DIR)

!if "$(USE_DEF_FILE)" == "1"
$(WSOCK_DLL) $(WSOCK_LIB): $(WSOCK_DEF) $(OBJECTS) $(DATA_OBJ)
	link -dll $(LDFLAGS) -implib:$(WSOCK_LIB) -out:$(WSOCK_DLL) -def:$(WSOCK_DEF) $(OBJECTS) $(EX_LIBS) > link.tmp
!else
$(WSOCK_DLL) $(WSOCK_LIB): $(OBJECTS) $(DATA_OBJ)
	link -dll $(LDFLAGS) -implib:$(WSOCK_LIB) -out:$(WSOCK_DLL) $(OBJECTS) $(EX_LIBS) > link.tmp
!endif
	lib -nologo $(WSOCK_LIB) $(DATA_OBJ)
	copy $(WSOCK_MAP) + link.tmp $(WSOCK_MAP)

install:
	copy $(WSOCK_LIB)               $(LIB_TARGET)
	copy $(WSOCK_DLL)               $(BIN_TARGET)
	copy wsock_trace$(X_SUFFIX).pdb $(BIN_TARGET)

uninstall:
	-del $(LIB_TARGET)\\$(WSOCK_LIB)
	-del $(BIN_TARGET)\\$(WSOCK_DLL)

test.exe: $(OBJ_DIR)\test.obj $(OBJ_DIR)\getopt.obj $(WSOCK_LIB)
	link $(LDFLAGS) -out:$@ -pdb:$*.pdb $** $(WSOCK_LIB) > link.tmp
	copy test.map + link.tmp test.map

dump.exe: dump.c common.c in_addr.c processes.c
	$(CC) $(CFLAGS) -DTEST_DUMP_DATA $** -Fe$@ -link -incremental:no ws2_32.lib ole32.lib

run_test: test.exe
	test.exe -dd

clean:
	-del link.tmp vc1*.pdb $(OBJ_DIR)\*.obj $(OBJ_DIR)\wsock_trace.res \
	     test.map test.lib test.exp

vclean realclean: clean
	-del wsock_trace.lib     wsock_trace.dll     wsock_trace.map     wsock_trace.exp     wsock_trace.pdb
	-del wsock_trace_x64.lib wsock_trace_x64.dll wsock_trace_x64.map wsock_trace_x64.exp wsock_trace_x64.pdb
	-del test.exe test.pdb dump.exe dump.pdb
	-rd $(OBJ_DIR)

$(OBJ_DIR)\wsock_trace.res: wsock_trace.rc
	rc -nologo -DDEBUG=$(USE_DEBUG) -DMACHINE=$(MACHINE) -D_MSC_VER -Fo $(OBJ_DIR)\wsock_trace.res wsock_trace.rc


#
# Test that 'fastcall' functions (-Gr) can be mixed in and decoded by stkwalk.c.
#
$(OBJ_DIR)\test.obj: test.c
	$(CC) $(CFLAGS) -Gr -Fo$*.obj -c test.c

$(OBJ_DIR)\getopt.obj: getopt.c
	$(CC) $(CFLAGS) -Gr -Fo$*.obj -c getopt.c

.c{$(OBJ_DIR)}.obj:
	$(CC) $(CFLAGS) -Fo$*.obj -c $<

#
# Make a .def file for X64; remove the leading '_' and the
# '@x' suffixes.
#
wsock_trace_x64.def: wsock_trace.def Makefile.VC6
	echo ; This file has been generated by Makefile.vc6. DO NOT EDIT! > wsock_trace_x64.def
	echo ;                                                           >> wsock_trace_x64.def
	sed -e "s/LIBRARY wsock_trace.dll/LIBRARY wsock_trace_x64.dll/"  \
	    -e "s/_\(.*\)@.*/\1/g" < wsock_trace.def                     >> wsock_trace_x64.def


$(OBJ_DIR)\common.obj:      common.c common.h init.h
$(OBJ_DIR)\data.obj:        data.c common.h in_addr.h
$(OBJ_DIR)\dump.obj:        dump.c common.h in_addr.h init.h wsock_trace.h
$(OBJ_DIR)\init.obj:        init.c common.h stkwalk.h bfd_gcc.h init.h wsock_trace.h
$(OBJ_DIR)\in_addr.obj:     in_addr.c common.h in_addr.h
$(OBJ_DIR)\stkwalk.obj:     stkwalk.c common.h init.h stkwalk.h
$(OBJ_DIR)\wsock_trace.obj: wsock_trace.c common.h stkwalk.h in_addr.h \
                            init.h dump.h wsock_trace.h


